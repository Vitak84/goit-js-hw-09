{"mappings":"gfAAAA,EAAA,SACeC,SAASC,uBAAuB,QACjCD,SAASE,kBAAkB,UADzC,IAGuBC,EAASC,EAD1BC,EAAQL,SAASE,kBAAkB,QAEhC,IAAII,SAAQ,SAACC,EAAQC,GAC1B,IAAIC,EAAI,GAGX,GAFGA,EAAIC,KAAKN,EAAMD,SAASQ,QACNC,KAAKC,SAAW,GAClB,CAEjB,IADD,IAAIC,EAAOT,EAAOU,cACRC,EAAE,EAAGA,GAAGP,EAAIE,OAAQK,GAAG,EACjCZ,GAAOU,EAENP,EAAQ,CAACJ,WAASC,S,MAEnBI,EAAO,CAACL,WAASC,S,IAIFa,IAAIX,SAClBY,MAAK,SAAAC,G,IAAGhB,EAAQgB,EAARhB,SAASC,EAAKe,EAALf,MAChBgB,QAAQC,IAAI,uBAAwCC,OAAfnB,EAAS,QAAYmB,OAANlB,EAAM,M,IAE3DmB,OAAM,SAAAJ,G,IAAGhB,EAAQgB,EAARhB,SAAUC,EAAKe,EAALf,MAClBgB,QAAQC,IAAI,sBAAqCC,OAAfnB,EAAS,QAAYmB,OAANlB,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nconst formEl = document.getElementsByClassName('form');\nconst amount =document.getElementsByName(\"amount\");\nconst stepEl =document.getElementsByName(\"step\");\nfunction createPromise(position,delay) {\n  return new Promise((resolve,reject)=>{\n    let arr=[]\n    arr.push(delay.position.length)\nconst shouldResolve = Math.random() > 0.3;\n if (shouldResolve) {\n  let step = stepEl.currentTarget\n   for (let i=0; i<=arr.length; i+=1) {\n  delay+=step \n}\n   resolve({position,delay})\n  } else {\n  reject({position,delay})\n  }})\n }\n\n createPromise().all(Promise)\n  .then(({ position,delay }) => {\n    console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n});"],"names":["parcelRequire","document","getElementsByClassName","getElementsByName","position","delay","$ce04d3a99e08e73b$var$stepEl","Promise","resolve","reject","arr","push","length","Math","random","step","currentTarget","i","all","then","param","console","log","concat","catch"],"version":3,"file":"03-promises.fe9dd16f.js.map"}