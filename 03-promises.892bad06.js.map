{"mappings":"oeAAAA,EAAA,SACeC,SAASC,uBAAuB,QACjCD,SAASE,kBAAkB,UADzC,MAEMC,EAAQH,SAASE,kBAAkB,QACzC,IAAuBE,EAASC,EACvB,IAAIC,SAAQ,CAACC,EAAQC,KAC1B,IAAIC,EAAI,GAGX,GAFGA,EAAIC,KAAKL,EAAMD,SAASO,QACNC,KAAKC,SAAW,GAClB,CAClB,IAAIC,EAAOX,EAAOY,cACjB,IAAK,IAAIC,EAAE,EAAGA,GAAGP,EAAIE,OAAQK,GAAG,EACjCX,GAAOS,EAENP,EAAQ,C,SAACH,E,MAASC,G,MAEnBG,EAAO,C,SAACJ,E,MAASC,GAAO,IAITY,IAAIX,SAClBY,MAAK,EAACd,SAAEA,EAAQC,MAACA,MAChBc,QAAQC,IAAI,uBAAqBhB,QAAiBC,MAAU,IAE7DgB,OAAM,EAACjB,SAAEA,EAAQC,MAAEA,MAClBc,QAAQC,IAAI,sBAAoBhB,QAAeC,MAAU","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nconst formEl = document.getElementsByClassName('form');\nconst amount =document.getElementsByName(\"amount\");\nconst stepEl =document.getElementsByName(\"step\");\nfunction createPromise(position,delay) {\n  return new Promise((resolve,reject)=>{\n    let arr=[]\n    arr.push(delay.position.length)\nconst shouldResolve = Math.random() > 0.3;\n if (shouldResolve) {\n  let step = stepEl.currentTarget\n   for (let i=0; i<=arr.length; i+=1) {\n  delay+=step \n}\n   resolve({position,delay})\n  } else {\n  reject({position,delay})\n  }})\n }\n\n createPromise().all(Promise)\n  .then(({ position,delay }) => {\n    console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n});"],"names":["parcelRequire","document","getElementsByClassName","getElementsByName","$47d4ff9957288465$var$stepEl","position","delay","Promise","resolve","reject","arr","push","length","Math","random","step","currentTarget","i","all","then","console","log","catch"],"version":3,"file":"03-promises.892bad06.js.map"}